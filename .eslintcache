[{"C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\index.js":"1","C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\App.js":"2","C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\reportWebVitals.js":"3","C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\components\\HOC\\PrivateRoute.js":"4","C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\actions\\index.js":"5","C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\containers\\Home\\index.js":"6","C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\containers\\Products\\index.js":"7","C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\containers\\Orders\\index.js":"8","C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\containers\\Signin\\index.js":"9","C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\containers\\Category\\index.js":"10","C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\containers\\Signup\\index.js":"11","C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\containers\\NewPage\\index.js":"12","C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\actions\\auth.actions.js":"13","C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\actions\\user.actions.js":"14","C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\actions\\category.action.js":"15","C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\actions\\product.action.js":"16","C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\actions\\initialData.action.js":"17","C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\actions\\page.action.js":"18","C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\actions\\order.action.js":"19","C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\urlConfig.js":"20","C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\containers\\Category\\components\\UpdateCategoriesModal.js":"21","C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\containers\\Category\\components\\AddCategoriesModal.js":"22","C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\helpers\\linearCategories.js":"23","C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\components\\Layout\\index.js":"24","C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\helpers\\axios.js":"25","C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\components\\UI\\Modal\\index.js":"26","C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\components\\UI\\Input\\index.js":"27","C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\components\\UI\\Card\\index.js":"28","C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\actions\\constants.js":"29","C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\components\\Header\\index.js":"30","C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\store\\index.js":"31","C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\reducers\\index.js":"32","C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\reducers\\auth.reducers.js":"33","C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\reducers\\user.reducer.js":"34","C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\reducers\\product.reducer.js":"35","C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\reducers\\category.reducer.js":"36","C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\reducers\\order.reducer.js":"37","C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\reducers\\page.reducer.js":"38"},{"size":726,"mtime":1611923545013,"results":"39","hashOfConfig":"40"},{"size":1493,"mtime":1611921777555,"results":"41","hashOfConfig":"40"},{"size":362,"mtime":499162500000,"results":"42","hashOfConfig":"40"},{"size":430,"mtime":1602778766890,"results":"43","hashOfConfig":"40"},{"size":239,"mtime":1606571990660,"results":"44","hashOfConfig":"40"},{"size":1045,"mtime":1602989825927,"results":"45","hashOfConfig":"40"},{"size":7579,"mtime":1611913647853,"results":"46","hashOfConfig":"40"},{"size":5105,"mtime":1607508297793,"results":"47","hashOfConfig":"40"},{"size":2001,"mtime":1606495509298,"results":"48","hashOfConfig":"40"},{"size":10044,"mtime":1604469266496,"results":"49","hashOfConfig":"40"},{"size":2938,"mtime":1607508370800,"results":"50","hashOfConfig":"40"},{"size":6227,"mtime":1604293558278,"results":"51","hashOfConfig":"40"},{"size":2627,"mtime":1611913529029,"results":"52","hashOfConfig":"40"},{"size":930,"mtime":1602850145115,"results":"53","hashOfConfig":"40"},{"size":2943,"mtime":1603902642159,"results":"54","hashOfConfig":"40"},{"size":1909,"mtime":1607508213228,"results":"55","hashOfConfig":"40"},{"size":1616,"mtime":1611901179303,"results":"56","hashOfConfig":"40"},{"size":784,"mtime":1604066217307,"results":"57","hashOfConfig":"40"},{"size":1379,"mtime":1607508192279,"results":"58","hashOfConfig":"40"},{"size":228,"mtime":1611913517243,"results":"59","hashOfConfig":"40"},{"size":3582,"mtime":1604292379003,"results":"60","hashOfConfig":"40"},{"size":1696,"mtime":1604337361062,"results":"61","hashOfConfig":"40"},{"size":431,"mtime":1604293250283,"results":"62","hashOfConfig":"40"},{"size":1080,"mtime":1603938607978,"results":"63","hashOfConfig":"40"},{"size":1175,"mtime":1604057832992,"results":"64","hashOfConfig":"40"},{"size":978,"mtime":1604287414683,"results":"65","hashOfConfig":"40"},{"size":1362,"mtime":1604293474181,"results":"66","hashOfConfig":"40"},{"size":477,"mtime":1606499774535,"results":"67","hashOfConfig":"40"},{"size":2715,"mtime":1607508895147,"results":"68","hashOfConfig":"40"},{"size":2440,"mtime":1607508258791,"results":"69","hashOfConfig":"40"},{"size":379,"mtime":1604035150996,"results":"70","hashOfConfig":"40"},{"size":542,"mtime":1604667120251,"results":"71","hashOfConfig":"40"},{"size":1651,"mtime":1606495123807,"results":"72","hashOfConfig":"40"},{"size":818,"mtime":1607508872920,"results":"73","hashOfConfig":"40"},{"size":403,"mtime":1603198353346,"results":"74","hashOfConfig":"40"},{"size":3433,"mtime":1607508743283,"results":"75","hashOfConfig":"40"},{"size":354,"mtime":1606582814656,"results":"76","hashOfConfig":"40"},{"size":741,"mtime":1604066486591,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hk0kj8",{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"83"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"83"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"83"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"83"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"83"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"83"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"83"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"83"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"83"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"83"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"83"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"83"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"83"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"83"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"83"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"83"},"C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\index.js",[],"C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\App.js",["172","173"],"import React,{useEffect} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Route, Switch} from 'react-router-dom'\nimport './App.css';\nimport PrivateRoute from './components/HOC/PrivateRoute';\nimport Home from './containers/Home';\nimport Signin from './containers/Signin';\nimport Signup from './containers/Signup';\nimport Products from './containers/Products';\nimport Orders from './containers/Orders';\nimport Category from './containers/Category';\nimport {isUserLoggedIn, getAllCategory, getInitialData } from './actions';\nimport NewPage from './containers/NewPage';\n\n\n\n\nfunction App() {\n  const dispatch = useDispatch();\n  const auth= useSelector(state => state.auth);\n  useEffect(() => {\n    if(!auth.authenticate){\n      dispatch(isUserLoggedIn());\n    }\n    if(auth.authenticate){\n      dispatch(getInitialData());\n    }\n    // dispatch(getAllCategory());\n    \n    \n  }, [auth.authenticate])\n  return (\n    <div className=\"App\">\n    \n       <Switch>\n       \n         <PrivateRoute path=\"/\" exact component={Home} />\n         <PrivateRoute path=\"/page\"  component={NewPage} />\n         <PrivateRoute path=\"/category\"  component={Category} />\n         <PrivateRoute path=\"/products\"  component={Products} />\n         <PrivateRoute path=\"/orders\"  component={Orders} />\n\n\n         <Route path=\"/signin\"  component={Signin}></Route>\n         <Route path=\"/signup\" component={Signup}></Route>\n         \n       </Switch>\n     \n    </div>\n  );\n}\n\nexport default App;\n",["174","175"],"C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\reportWebVitals.js",[],"C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\components\\HOC\\PrivateRoute.js",[],"C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\actions\\index.js",[],"C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\containers\\Home\\index.js",["176","177","178","179"],"import React from \"react\";\r\nimport './style.css';\r\nimport { Jumbotron, Row, Col, Container } from \"react-bootstrap\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n/**\r\n * @author\r\n * @function Home\r\n **/\r\n\r\nconst Home = (props) => {\r\n  return (\r\n    <Layout sidebar>\r\n      \r\n\r\n      <Jumbotron style={{margin:\"5rem\", background:\"#ffffff\"}} className=\"text-center\">\r\n            <h1>Welcome Admin Dashboard</h1>\r\n            <p>It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy.</p>\r\n        </Jumbotron>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\containers\\Products\\index.js",["180","181"],"import React, { useState } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { Container, Row, Col, Table } from \"react-bootstrap\";\r\nimport Input from \"../../components/UI/Input\";\r\nimport Modal from \"../../components/UI/Modal\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { addProduct, deleteProductById } from \"../../actions\";\r\nimport { generatePublicUrl } from \"../../urlConfig\";\r\nimport \"./Style.css\";\r\n\r\n/**\r\n * @author\r\n * @function Products\r\n **/\r\n\r\nconst Products = (props) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [quantity, setQuantity] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [categoryId, setCategoryId] = useState(\"\");\r\n  const [productPictures, setProductPictures] = useState([]);\r\n  const [show, setShow] = useState(false);\r\n  const [productDetailModal, setProductDetailModal] = useState(false);\r\n  const [productDetails, setProductDetails] = useState(null);\r\n  const category = useSelector((state) => state.category);\r\n  const product = useSelector((state) => state.product);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n  };\r\n\r\n  const submitProductForm = () => {\r\n    const form = new FormData();\r\n    form.append(\"name\", name);\r\n    form.append(\"quantity\", quantity);\r\n    form.append(\"price\", price);\r\n    form.append(\"description\", description);\r\n    form.append(\"category\", categoryId);\r\n\r\n    for (let pic of productPictures) {\r\n      form.append(\"productPicture\", pic);\r\n    }\r\n\r\n    dispatch(addProduct(form)).then(() => setShow(false));\r\n  };\r\n  const handleShow = () => setShow(true);\r\n\r\n  const createCategoryList = (categories, options = []) => {\r\n    for (let category of categories) {\r\n      options.push({ value: category._id, name: category.name });\r\n      if (category.children.length > 0) {\r\n        createCategoryList(category.children, options);\r\n      }\r\n    }\r\n\r\n    return options;\r\n  };\r\n\r\n  const handleProductPictures = (e) => {\r\n    setProductPictures([...productPictures, e.target.files[0]]);\r\n  };\r\n\r\n  const renderProducts = () => {\r\n    return (\r\n      <Table style={{ fontSize: 12 }} responsive=\"sm\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Name</th>\r\n            <th>Price</th>\r\n            <th>Quantity</th>\r\n            <th>Category</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {product.products.length > 0\r\n            ? product.products.map((product) => (\r\n                <tr key={product._id}>\r\n                  <td>2</td>\r\n                  <td>{product.name}</td>\r\n                  <td>{product.price}</td>\r\n                  <td>{product.quantity}</td>\r\n                  <td>{product.category.name}</td>\r\n                  <td>\r\n                    <button onClick={() => showProductDetailsModal(product)}>\r\n                      info\r\n                    </button>\r\n                    <button\r\n                      onClick={() => {\r\n                        const payload = {\r\n                          productId: product._id,\r\n                        };\r\n                        dispatch(deleteProductById(payload));\r\n                      }}\r\n                    >\r\n                      del\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))\r\n            : null}\r\n        </tbody>\r\n      </Table>\r\n    );\r\n  };\r\n\r\n  const renderAddProductModal = () => {\r\n    return (\r\n      <Modal\r\n        show={show}\r\n        handleClose={handleClose}\r\n        modalTitle={\"Add New Product\"}\r\n        onSubmit={submitProductForm}\r\n      >\r\n        <Input\r\n          label=\"Name\"\r\n          value={name}\r\n          placeholder={`Product Name`}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n        <Input\r\n          label=\"Quantity\"\r\n          value={quantity}\r\n          placeholder={`Quantity`}\r\n          onChange={(e) => setQuantity(e.target.value)}\r\n        />\r\n        <Input\r\n          label=\"Price\"\r\n          value={price}\r\n          placeholder={`Price`}\r\n          onChange={(e) => setPrice(e.target.value)}\r\n        />\r\n        <Input\r\n          label=\"Description\"\r\n          value={description}\r\n          placeholder={`Description`}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n        />\r\n        <select\r\n          className=\"form-control\"\r\n          value={categoryId}\r\n          onChange={(e) => setCategoryId(e.target.value)}\r\n        >\r\n          <option>select category</option>\r\n          {createCategoryList(category.categories).map((option) => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        {productPictures.length > 0\r\n          ? productPictures.map((pic, index) => (\r\n              <div key={index}>{pic.name}</div>\r\n            ))\r\n          : null}\r\n        <input\r\n          type=\"file\"\r\n          name=\"productPicture\"\r\n          onChange={handleProductPictures}\r\n        />\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  const handleCloseProductDetailsModal = () => {\r\n    setProductDetailModal(false);\r\n  };\r\n\r\n  const showProductDetailsModal = (product) => {\r\n    setProductDetails(product);\r\n    setProductDetailModal(true);\r\n  };\r\n\r\n  const renderProductDetailsModal = () => {\r\n    if (!productDetails) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <Modal\r\n        show={productDetailModal}\r\n        handleClose={handleCloseProductDetailsModal}\r\n        modalTitle={\"Product Details\"}\r\n        size=\"lg\"\r\n      >\r\n        <Row>\r\n          <Col md=\"6\">\r\n            <label className=\"key\">Name</label>\r\n            <p className=\"value\">{productDetails.name}</p>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <label className=\"key\">Price</label>\r\n            <p className=\"value\">{productDetails.price}</p>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md=\"6\">\r\n            <label className=\"key\">Quantity</label>\r\n            <p className=\"value\">{productDetails.quantity}</p>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <label className=\"key\">Category</label>\r\n            <p className=\"value\">{productDetails.category.name}</p>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <label className=\"key\">Description</label>\r\n            <p className=\"value\">{productDetails.description}</p>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <label className=\"key\">Product Pictures</label>\r\n            <div style={{ display: \"flex\" }}>\r\n              {productDetails.productPictures.map((picture) => (\r\n                <div className=\"productImgContainer\">\r\n                  {/* <img src={generatePublicUrl(picture.img)} /> */}\r\n                  <img src={picture.img} />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Modal>\r\n    );\r\n  };\r\n  return (\r\n    <Layout sidebar>\r\n      <Container>\r\n        <Row>\r\n          <Col md={12}>\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n              <h3>Products</h3>\r\n              <button onClick={handleShow}>Add</button>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>{renderProducts()}</Col>\r\n        </Row>\r\n      </Container>\r\n      {renderAddProductModal()}\r\n      {renderProductDetailsModal()}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Products;","C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\containers\\Orders\\index.js",[],"C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\containers\\Signin\\index.js",["182","183","184"],"import React,{useState, useEffect} from \"react\";\r\nimport { Button, Col, Container, Form, Row } from \"react-bootstrap\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {login} from \"../../actions/auth.actions\";\r\nimport Layout from \"../../components/Layout\";\r\nimport Input from \"../../components/UI/Input\";\r\n\r\n/**\r\n * @author\r\n * @function Signin\r\n **/\r\n\r\nconst Signin = (props) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const auth = useSelector(state => state.auth);\r\n  const user = useSelector(state => state.user);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const userLogin= (e)=>{\r\n\r\n    e.preventDefault();\r\n    const user= {\r\n      // email: \"admin@gmail.com\",\r\n      // password:\"123456\"\r\n      email,password\r\n    }\r\n    // dispatch(login(auth));\r\n    dispatch(login(user));\r\n  }\r\n\r\n  if(auth.authenticate){\r\n    return <Redirect to={`/`} />\r\n  }\r\n\r\n  \r\n  return (\r\n    <Layout>\r\n      <Container>\r\n      <p className=\"userMessage\">{user.message}</p>\r\n        <Row style={{ marginTop: \"60px\" }}>\r\n          <Col md={{ span: 6, offset: 3 }}>\r\n            <Form onSubmit={userLogin}>\r\n              <Input\r\n                label=\"Email\"\r\n                type=\"email\"\r\n                placeholder=\"Enter Email\"\r\n                value={email}\r\n                onChange={(event)=> setEmail(event.target.value)}\r\n              />\r\n\r\n              <Input\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                placeholder=\"Enter Password\"\r\n                value={password}\r\n                \r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\containers\\Category\\index.js",["185","186","187","188","189","190","191","192","193"],"import React, { useState,useEffect } from \"react\";\r\nimport \"./Category.css\";\r\nimport { Col, Container, Row, Button } from \"react-bootstrap\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addCategory, getAllCategory, updateCategories, deleteCategories as deleteCategoriesAction } from \"../../actions\";\r\nimport Input from \"../../components/UI/Input\";\r\nimport Modal from \"../../components/UI/Modal\";\r\nimport CheckboxTree from \"react-checkbox-tree\";\r\nimport { IoIosCheckboxOutline, IoIosCheckbox, IoIosArrowForward, IoIosArrowDown, IoIosAdd, IoIosTrash, IoIosCloudUpload } from \"react-icons/io\";\r\nimport \"react-checkbox-tree/lib/react-checkbox-tree.css\";\r\nimport UpdateCategoriesModal from \"./components/UpdateCategoriesModal\";\r\nimport AddCategoriesModal from \"./components/AddCategoriesModal\";\r\n/**\r\n * @author\r\n * @function Category\r\n **/\r\n\r\nconst Category = (props) => {\r\n  const category = useSelector(state => state.category);\r\n  const [show, setShow] = useState(false);\r\n  const [updateCategoryModal, setUpdateCategoryModal] = useState(false);\r\n  const [deleteCategoryModal, setDeleteCategoryModal] = useState(false);\r\n  const [categoryName, setCategoryName] = useState(\"\");\r\n  const [parentcategoryId, setParentcategoryId] = useState(\"\");\r\n  const [categoryImage, setCategoryImage] = useState(\"\");\r\n  const [checked, setChecked] = useState([]);\r\n  const [expanded, setExpanded] = useState([])\r\n  const [checkedArray, setCheckedArray] = useState([]);\r\n  const [expandedArray, setExpandedArray] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n \r\n  useEffect(()=>{\r\n    if(!category.loading){\r\n      setShow(false);\r\n    }\r\n  },[category.loading])\r\n  \r\n\r\n  const handleClose = () => {\r\n    const form = new FormData();\r\n    if(categoryName === \"\"){\r\n      alert(\"Category Name is required\");\r\n      setShow(false);\r\n      return;\r\n    }\r\n    form.append(\"name\", categoryName);\r\n    form.append(\"parentId\", parentcategoryId);\r\n    form.append(\"categoryImage\", categoryImage);\r\n    dispatch(addCategory(form));\r\n    setCategoryName(\"\");\r\n    setParentcategoryId(\"\");\r\n    setCategoryImage(\"\");\r\n    setShow(false);\r\n  };\r\n  \r\n  const handleShow = () => setShow(true);\r\n  \r\n  const handleCategoryInput=(key, value, index, type)=>{\r\n    if(type==\"checked\"){\r\n      const updatedCheckedArray=checkedArray.map((item,_index)=>index==_index ? {...item, [key]:value} : item)\r\n      setCheckedArray(updatedCheckedArray);\r\n    }else if(type== \"expanded\"){\r\n      const updatedExpandedArray=expandedArray.map((item,_index)=>index==_index ? {...item, [key]:value} : item)\r\n      setExpandedArray(updatedExpandedArray);\r\n    }\r\n  }\r\n\r\n\r\n  const renderCategories = (categories) => {\r\n    let mycategories = [];\r\n    for (let category of categories) {\r\n      mycategories.push(\r\n        {\r\n            label: category.name,\r\n            value:category._id,\r\n            children:category.children.length > 0 && renderCategories(category.children)\r\n        }\r\n        \r\n      );\r\n    }\r\n    return mycategories;\r\n  };\r\n  const createCategoryList = (categories, options = []) => {\r\n    for (let category of categories) {\r\n      options.push({\r\n        value: category._id,\r\n        name: category.name,\r\n        parentId:category.parentId,\r\n        type:category.type\r\n      });\r\n      if (category.children.length > 0) {\r\n        createCategoryList(category.children, options);\r\n      }\r\n    }\r\n    return options;\r\n  };\r\n  const handleCategoryImage = (e) => {\r\n    setCategoryImage(e.target.files[0]);\r\n  };\r\n  \r\n  const updateCategoriesForm = ()=>{\r\n\r\n    const form = new FormData();\r\n\r\n\r\n    expandedArray.forEach((item, index)=>{\r\n      form.append('_id',item.value);\r\n      form.append('name',item.name);\r\n      form.append('parentId',item.parentId ? item.parentId : \"\");\r\n      form.append('type',item.type);\r\n\r\n    })\r\n    checkedArray.forEach((item, index)=>{\r\n      form.append('_id',item.value);\r\n      form.append('name',item.name);\r\n      form.append('parentId',item.parentId ? item.parentId : \"\");\r\n      form.append('type',item.type);\r\n    })\r\n    dispatch(updateCategories(form))\r\n    // .then(result =>{\r\n    //   if(result){\r\n    //     dispatch(getAllCategory())\r\n    //   }\r\n    // })\r\n    setUpdateCategoryModal(false);\r\n  }\r\n\r\n\r\n\r\n\r\n  // -----------------------------------------------------------------------------------------------------\r\n  // UPDATE CATEGORY MODAL\r\n  // -----------------------------------------------------------------------------------------------------\r\n\r\n  const updateCategory = () =>{\r\n    updateCheckedAndExpanedCategories();\r\n    setUpdateCategoryModal(true);\r\n    \r\n  } \r\n  const updateCheckedAndExpanedCategories = () =>{\r\n    const categories = createCategoryList(category.categories)\r\n    const checkedArray = [];\r\n    const expandedArray = [];\r\n    checked.length > 0 && checked.forEach((categoryId, index)=>{\r\n      const category = categories.find((category, _index)=> categoryId == category.value);\r\n      category && checkedArray.push(category);\r\n    })\r\n    expanded.length > 0 && expanded.forEach((categoryId, index)=>{\r\n      const category = categories.find((category, _index)=> categoryId == category.value);\r\n      category && expandedArray.push(category);\r\n    })\r\n    setExpandedArray(expandedArray);\r\n    setCheckedArray(checkedArray);\r\n    // console.log({expanded,checked, categories, checkedArray, expandedArray});\r\n  }\r\n  \r\n\r\n\r\n  // -----------------------------------------------------------------------------------------------------\r\n  // DELETE CATEGORY MODAL\r\n  // -----------------------------------------------------------------------------------------------------\r\n\r\nconst deleteCategory=()=>{\r\n  updateCheckedAndExpanedCategories();\r\n  setDeleteCategoryModal(true);\r\n}\r\nconst deleteCategories = () =>{\r\n  const checkedIdsArray=checkedArray.map((item, index) => ({_id: item.value}));\r\n  const expandedIdsArray=expandedArray.map((item, index) => ({_id: item.value}));\r\n  const idsArray= expandedIdsArray.concat(checkedIdsArray);\r\n  if(checkedIdsArray.length >0 ){\r\n    dispatch(deleteCategoriesAction(checkedIdsArray))\r\n    .then(result =>{\r\n      if(result){\r\n        dispatch(getAllCategory());\r\n        setDeleteCategoryModal(false);\r\n      }\r\n    })\r\n    setDeleteCategoryModal(false);\r\n    // if(expandedIdsArray.length >0){\r\n    //   dispatch(deleteCategoriesAction(expandedIdsArray))\r\n    //   .then(result =>{\r\n    //     if(result){\r\n    //       dispatch(getAllCategory());\r\n    //       setDeleteCategoryModal(false);\r\n    //     }\r\n    //   })\r\n    // }\r\n\r\n  }\r\n  \r\n}\r\nconst deleteCatgoriesClose =()=>{\r\n  // alert('No')\r\n  setDeleteCategoryModal(false);\r\n}\r\n  const renderDeleteCategoriesModal = () =>{\r\n    console.log('Delete', checkedArray);\r\n    return(\r\n      <Modal \r\n      show={deleteCategoryModal}\r\n      handleClose={() => setDeleteCategoryModal(false)}\r\n      modalTitle=\"Cofirm\"\r\n      buttons={[\r\n        {\r\n          label: 'No',\r\n          color: 'success',\r\n          onClick: deleteCatgoriesClose\r\n        },\r\n        {\r\n          label: 'Yes',\r\n          color: 'danger',\r\n          onClick: deleteCategories\r\n        }\r\n      ]}\r\n      >\r\n        <h6>Expanded</h6>\r\n        {expandedArray.map((item,index) => <span key={index}>{item.name}</span> )}\r\n        <h6>Checked</h6>\r\n        {checkedArray.map((item,index) => <span key={index}>{item.name}</span> )}\r\n      </Modal>\r\n    )\r\n  }\r\n\r\n\r\n  // -----------------------------------------------------------------------------------------------------\r\n\r\n\r\nconst categoryList = createCategoryList(category.categories);\r\n\r\n\r\n\r\n  return (\r\n    <Layout sidebar>\r\n      <Container>\r\n        <Row>\r\n          <Col md={12}>\r\n            <div className=\"category\">\r\n              <h3>Category</h3>\r\n              <div className=\"actionBtnContainer\">\r\n                <span>Actions:</span>\r\n              <button onClick={handleShow}><IoIosAdd /> <span>Add</span></button>\r\n              <button onClick={deleteCategory}><IoIosTrash /> <span>Delete</span></button>\r\n              <button onClick={updateCategory}><IoIosCloudUpload /> <span>Edit</span></button>\r\n              </div>\r\n              \r\n            </div>\r\n            \r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={12}>\r\n            {/* <ul>\r\n              {renderCategories(category.categories)}\r\n            </ul> */}\r\n            <CheckboxTree\r\n                nodes={renderCategories(category.categories)}\r\n                checked={checked}\r\n                expanded={expanded}\r\n                onCheck={checked =>setChecked(checked)}\r\n                onExpand={expanded => setExpanded(expanded)}\r\n                icons={{\r\n                    check: <IoIosCheckbox />,\r\n                    uncheck: <IoIosCheckboxOutline />,\r\n                    halfCheck: <IoIosCheckboxOutline /> ,\r\n                    expandClose:<IoIosArrowForward /> ,\r\n                    expandOpen: <IoIosArrowDown />\r\n\r\n                }}\r\n            />\r\n            \r\n          </Col>\r\n        </Row>\r\n       \r\n      </Container>\r\n      <AddCategoriesModal\r\n       show={show}\r\n       handleClose={()=> setShow(false)}\r\n       onSubmit={handleClose}\r\n       modalTitle={\"Add New Category\"}\r\n       size=\"md\"\r\n       categoryName={categoryName}\r\n       setCategoryName={setCategoryName}\r\n       parentcategoryId={parentcategoryId}\r\n       setParentcategoryId= {setParentcategoryId}\r\n       categoryList = {categoryList}\r\n       handleCategoryImage={handleCategoryImage}\r\n      />\r\n\r\n      <UpdateCategoriesModal\r\n      show={updateCategoryModal}\r\n      handleClose={()=> setUpdateCategoryModal(false)}\r\n      onSubmit={updateCategoriesForm}\r\n      modalTitle={\"Update Category\"}\r\n      size=\"lg\"\r\n      expandedArray={expandedArray}\r\n      checkedArray={checkedArray}\r\n      handleCategoryInput={handleCategoryInput}\r\n      categoryList={categoryList}\r\n      />\r\n\r\n      { renderDeleteCategoriesModal() }\r\n\r\n     \r\n\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Category;\r\n","C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\containers\\Signup\\index.js",["194","195"],"import React, { useState } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { Container, Form, Row, Col, Button } from \"react-bootstrap\";\r\nimport Input from \"../../components/UI/Input\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { signup } from \"../../actions\";\r\nimport { useEffect } from \"react\";\r\n\r\n/**\r\n * @author\r\n * @function Signup\r\n **/\r\n\r\nconst Signup = (props) => {\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const auth = useSelector((state) => state.auth);\r\n  const user = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (!user.loading) {\r\n      setFirstName(\"\");\r\n      setLastName(\"\");\r\n      setEmail(\"\");\r\n      setPassword(\"\");\r\n    }\r\n  }, [user.loading]);\r\n\r\n  const userSignup = (e) => {\r\n    e.preventDefault();\r\n\r\n    const user = {\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      password,\r\n    };\r\n\r\n    dispatch(signup(user));\r\n  };\r\n\r\n  if (auth.authenticate) {\r\n    return <Redirect to={`/`} />;\r\n  }\r\n\r\n  if (user.loading) {\r\n    return <p>Loading...!</p>;\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <Container>\r\n        {user.message}\r\n        <Row style={{ marginTop: \"50px\" }}>\r\n          <Col md={{ span: 6, offset: 3 }}>\r\n            <Form onSubmit={userSignup}>\r\n              <Row>\r\n                <Col md={6}>\r\n                  <Input\r\n                    label=\"First Name\"\r\n                    placeholder=\"First Name\"\r\n                    value={firstName}\r\n                    type=\"text\"\r\n                    onChange={(e) => setFirstName(e.target.value)}\r\n                  />\r\n                </Col>\r\n                <Col md={6}>\r\n                  <Input\r\n                    label=\"Last Name\"\r\n                    placeholder=\"Last Name\"\r\n                    value={lastName}\r\n                    type=\"text\"\r\n                    onChange={(e) => setLastName(e.target.value)}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Input\r\n                label=\"Email\"\r\n                placeholder=\"Email\"\r\n                value={email}\r\n                type=\"email\"\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n\r\n              <Input\r\n                label=\"Password\"\r\n                placeholder=\"Password\"\r\n                value={password}\r\n                type=\"password\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Signup;","C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\containers\\NewPage\\index.js",["196"],"import React,{useState, useEffect} from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createPage } from '../../actions';\r\nimport Layout from '../../components/Layout';\r\nimport Input from '../../components/UI/Input';\r\nimport Modal from '../../components/UI/Modal'\r\nimport linearCategories from '../../helpers/linearCategories';\r\n\r\n/**\r\n* @author\r\n* @function \r\nNewPage\r\n**/\r\n\r\nconst \r\nNewPage = (props) => {\r\n    const category = useSelector(state => state.category);\r\n    const page = useSelector(state=>state.page);\r\n    const [createModal, setCreateModal] = useState(false)\r\n    const [title, setTitle] = useState('');\r\n    const [categories, setCategories]= useState([]);\r\n    const [categoryId, setCategoryId] = useState('')\r\n    const [desc, setDesc] = useState('');\r\n    const [type, setType] = useState('');\r\n    const [banners, setBanners] = useState([]);\r\n    const [products, setProducts] = useState([]);\r\n    const  dispatch = useDispatch();\r\n    \r\n\r\n    useEffect(() => {\r\n        setCategories(linearCategories(category.categories));\r\n        \r\n    }, [category]);\r\n\r\n    useEffect(() => {\r\n       console.log(page);\r\n       if(!page.loading){\r\n           setCreateModal(false);\r\n           setTitle(\"\");\r\n           setDesc(\"\");\r\n           setCategoryId(\"\");\r\n           setProducts([]);\r\n           setBanners([]);\r\n       }\r\n    }, [page])\r\n\r\n    const onCategoryChange=(e)=>{\r\n        const category = categories.find(category => category.value == e.target.value)\r\n        setCategoryId(e.target.value);\r\n        setType(category.type)\r\n\r\n    }\r\n\r\n    const handleBannerImages =(e)=>{\r\n        // e.target.value();\r\n        setBanners([...banners, e.target.files[0]])\r\n    }\r\n    const handleProductImages=(e)=>{\r\n        // e.target.value();\r\n        setProducts([...products, e.target.files[0]])\r\n    }\r\n\r\n    \r\n    const submitPageForm = (e) =>{\r\n       \r\n        if(title === \"\" ){\r\n            alert('Title is required');\r\n            setCreateModal(false);\r\n            return ;\r\n        }\r\n        const form =  new FormData();\r\n        form.append('title',title);\r\n        form.append('description',desc);\r\n        form.append('category',categoryId);\r\n        form.append('type',type);\r\n        banners.forEach((banner, index)=>{\r\n            form.append('banners', banner)\r\n        });\r\n        products.forEach((product, index)=>{\r\n            form.append('products', product)\r\n        });\r\n        dispatch(createPage(form))\r\n        // console.log({title, desc, categoryId, type, banners, products})\r\n    }\r\n    const renderCreatePageModal =() =>{\r\n        return(\r\n            <Modal \r\n            show={createModal}\r\n            modalTitle={'Create New Page'}\r\n            handleClose={()=>setCreateModal(false)}\r\n            onSubmit={submitPageForm}\r\n            >\r\n               <Container>\r\n               <Row>\r\n                    <Col>\r\n                        {/* <select\r\n                        className=\"form-control\"\r\n                        value={categoryId}\r\n                        onChange={onCategoryChange}\r\n                        >\r\n                            <option value=\"\">Select Categories</option>\r\n                            {categories.map(cate=>\r\n                                <option value={cate._id} key={cate._id}>{cate.name}</option>\r\n                                )}\r\n                        </select> */}\r\n                        <Input\r\n                        value={categoryId}\r\n                        onChange={onCategoryChange}\r\n                        type=\"select\"\r\n                        options={categories}\r\n                        placeholder={'Select Category'}\r\n                        />\r\n                        \r\n                    </Col>\r\n                </Row>\r\n                \r\n                <Row>\r\n                    <Col>\r\n                        <Input \r\n                        value={title}\r\n                        onChange={(e)=>setTitle(e.target.value)}\r\n                        placeholder={'Page Title'}\r\n                        />\r\n                        \r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Input \r\n                        value={desc}\r\n                        onChange={(e)=>setDesc(e.target.value)}\r\n                        placeholder={'Page Desc'}\r\n                        />\r\n                        \r\n                    </Col>\r\n                </Row>\r\n                {\r\n                    banners.length > 0 ?\r\n                    banners.map((banner, index)=>\r\n                    <Row key={index}>\r\n                        <Col>{banner.name}</Col>\r\n                    </Row>\r\n                    ) : null\r\n                }\r\n                <Row>\r\n                    <Col>\r\n                        <Input \r\n                        type=\"file\"\r\n                        name=\"banners\"\r\n                        onChange={handleBannerImages}\r\n                        />\r\n                        \r\n                    </Col>\r\n                </Row>\r\n                {\r\n                    products.length > 0 ?\r\n                    products.map((product, index)=>\r\n                    <Row  key={index}>\r\n                        <Col>{product.name}</Col>\r\n                    </Row>\r\n                    ) : null\r\n                }\r\n                <Row>\r\n                    <Col>\r\n                    <Input \r\n                        type=\"file\"\r\n                        name=\"products\"\r\n                        onChange={handleProductImages}\r\n                        />\r\n                        \r\n                    </Col>\r\n                </Row>               \r\n               </Container>\r\n            </Modal>\r\n        )\r\n    }\r\n  return(\r\n    <Layout sidebar>\r\n        {\r\n            page.loading ? \r\n            <>\r\n            <p>Creating Page.... please wait</p>\r\n            </>\r\n            :\r\n            <>\r\n            {renderCreatePageModal()}\r\n        <button onClick={()=> setCreateModal(true)}>Create Page</button>\r\n            </>\r\n        }\r\n        \r\n    </Layout>\r\n   )\r\n\r\n }\r\n\r\nexport default NewPage;","C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\actions\\auth.actions.js",[],"C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\actions\\user.actions.js",["197"],"import axiosInstance from \"../helpers/axios\"\r\nimport { authConstants, userConstants } from \"./constants\"\r\n\r\n\r\nexport const signup = (user)=>{\r\n    console.log(user)\r\n\r\n  return async (dispatch)=>{\r\n      dispatch({type: userConstants.USER_REGISTER_REQUEST});\r\n      const res= await axiosInstance.post(`/admin/signup`,{\r\n          ...user\r\n      });\r\n      if(res.status === 201){\r\n          \r\n          const {message}= res.data\r\n          dispatch({\r\n              type:userConstants.USER_REGISTER_SUCCESS,\r\n              payload:{\r\n                  message\r\n              }\r\n          })\r\n      }else{\r\n          console.log(\"Not Login\")\r\n          if(res.status === 400){\r\n              \r\n              dispatch({\r\n                  type: userConstants.USER_REGISTER_FAILURE,\r\n                  payload:{\r\n                      error:res.data.error\r\n                  }\r\n              })\r\n          }\r\n      }\r\n      \r\n  }\r\n}","C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\actions\\category.action.js",["198"],"import axiosInstance from \"../helpers/axios\"\r\nimport { categoryConstants } from \"./constants\";\r\n\r\nexport const getAllCategory=()=>{\r\n    return async dispatch=>{\r\n        dispatch({type:categoryConstants.GET_ALL_CATEGORIES_REQUEST});\r\n\r\n        const res= await axiosInstance.get('category/getcategory');\r\n        console.log(res);\r\n        if(res.status === 200){\r\n            const {categoryList}= res.data;\r\n            dispatch({\r\n                type:categoryConstants.GET_ALL_CATEGORIES_SUCCESS,\r\n                payload:{\r\n                    categories: categoryList\r\n                }\r\n            })\r\n        }else{\r\n            dispatch({\r\n                type:categoryConstants.GET_ALL_CATEGORIES_FAILURE,\r\n                payload:{error:res.data.error}\r\n            })\r\n        }\r\n    }\r\n}\r\nexport const addCategory=(form)=>{\r\n    return async dispatch =>{\r\n        dispatch({type:categoryConstants.ADD_NEW_CATEGORY_REQUEST});\r\n        try{\r\n            const res= await axiosInstance.post(`/category/create`,form);\r\n        console.log(res);\r\n        if(res.status === 201){\r\n            // const {categoryList}= res.data;\r\n            dispatch({\r\n                type:categoryConstants.ADD_NEW_CATEGORY_SUCCESS,\r\n                payload:{category:res.data.category}\r\n            })\r\n        }else{\r\n            dispatch({\r\n                type:categoryConstants.ADD_NEW_CATEGORY_FAILURE,\r\n                payload:{error:res.data.error}\r\n            })\r\n        }\r\n        }catch(error){\r\n            console.log(error.response);\r\n        }\r\n        \r\n\r\n    }\r\n}\r\n const updateCategories=(form)=>{\r\n    return async dispatch =>{\r\n        dispatch({type: categoryConstants.UPDATE_CATEGORIES_REQUEST})\r\n        const res= await axiosInstance.post(`/category/update`,form);\r\n        if(res.status === 201){\r\n            dispatch({\r\n                type:categoryConstants.UPDATE_CATEGORIES_SUCCESS\r\n            })\r\n            dispatch(getAllCategory());\r\n        }else{\r\n            const {error} = res.data;\r\n           dispatch({\r\n               type: categoryConstants.UPDATE_CATEGORIES_FAILURE,\r\n               payload: {error}\r\n           })\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const deleteCategories=(ids)=>{\r\n    return async dispatch =>{\r\n        dispatch({type: categoryConstants.DELETE_CATEGORIES_REQUEST})\r\n        const res= await axiosInstance.post(`/category/delete`,{\r\n            payload:{\r\n                ids\r\n            }\r\n        });\r\n        if(res.status == 201){\r\n            dispatch(getAllCategory());\r\n           dispatch({\r\n               type:categoryConstants.DELETE_CATEGORIES_SUCCESS\r\n           })\r\n           \r\n        }else{\r\n            const {error}=res.data\r\n            dispatch({\r\n                type:categoryConstants.DELETE_CATEGORIES_FAILURE,\r\n                payload:{\r\n                    error\r\n                }\r\n            })\r\n        }\r\n        \r\n\r\n    }\r\n}\r\nexport {updateCategories}","C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\actions\\product.action.js",[],"C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\actions\\initialData.action.js",["199"],"import {\r\n  initialDataConstants,\r\n  categoryConstants,\r\n  productConstants,\r\n  orderConstants,\r\n} from \"./constants\";\r\nimport axios from \"../helpers/axios\";\r\n\r\nexport const getInitialData = () => {\r\n  return async (dispatch) => {\r\n    const res = await axios.post(`/initialData`);\r\n    if (res.status === 200) {\r\n      const { categories, products, orders } = res.data;\r\n      dispatch({\r\n        type: categoryConstants.GET_ALL_CATEGORIES_SUCCESS,\r\n        payload: { categories },\r\n      });\r\n      dispatch({\r\n        type: productConstants.GET_ALL_PRODUCTS_SUCCESS,\r\n        payload: { products },\r\n      });\r\n      dispatch({\r\n        type: orderConstants.GET_CUSTOMER_ORDER_SUCCESS,\r\n        payload: { orders },\r\n      });\r\n    }\r\n    console.log(res);\r\n  };\r\n};\r\n\r\n\r\n// import axiosInstance from \"../helpers/axios\";\r\n// import { categoryConstants, initialDataConstants, productConstants } from \"./constants\";\r\n\r\n// export const getInitialData= (req,res)=>{\r\n//     return async dispatch=>{\r\n//         // dispatch({type: initialDataConstants.GET_ALL_INITIAL_DATA_REQUEST});\r\n//         const res = await axiosInstance.post(`/initialdata`);\r\n//         if(res.status === 200){\r\n//             const {categories, products}= res.data\r\n//             dispatch({\r\n//                 type:categoryConstants.GET_ALL_CATEGORIES_SUCCESS,\r\n//                 payload:{ categories}\r\n//             })\r\n//             dispatch({\r\n//                 type: productConstants.GET_ALL_PRODUCTS_SUCCESS,\r\n//                 payload:{products}\r\n//             })\r\n//         }\r\n//         console.log(res.data)\r\n//     }\r\n// }","C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\actions\\page.action.js",[],"C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\actions\\order.action.js",[],"C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\urlConfig.js",[],"C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\containers\\Category\\components\\UpdateCategoriesModal.js",[],"C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\containers\\Category\\components\\AddCategoriesModal.js",[],"C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\helpers\\linearCategories.js",[],"C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\components\\Layout\\index.js",[],"C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\helpers\\axios.js",[],"C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\components\\UI\\Modal\\index.js",[],"C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\components\\UI\\Input\\index.js",[],"C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\components\\UI\\Card\\index.js",[],"C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\actions\\constants.js",[],"C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\components\\Header\\index.js",["200"],"import React from \"react\";\r\nimport { Navbar, Nav, NavDropdown, Container } from \"react-bootstrap\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { signout } from \"../../actions\";\r\n\r\n/**\r\n * @author\r\n * @function Header\r\n **/\r\n\r\nconst Header = (props) => {\r\n  const auth = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  const logout = () => {\r\n    dispatch(signout());\r\n  };\r\n\r\n  const renderLoggedInLinks = () => {\r\n    return (\r\n      <Nav>\r\n        <li className=\"nav-item\">\r\n          <span className=\"nav-link\" onClick={logout}>\r\n            Signout\r\n          </span>\r\n        </li>\r\n      </Nav>\r\n    );\r\n  };\r\n\r\n  const renderNonLoggedInLinks = () => {\r\n    return (\r\n      <Nav>\r\n        {/* <Nav.Link href=\"#deets\">Signin</Nav.Link> */}\r\n        <li className=\"nav-item\">\r\n          <NavLink to=\"signin\" className=\"nav-link\">\r\n            Signin\r\n          </NavLink>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <NavLink to=\"signup\" className=\"nav-link\">\r\n            Signup\r\n          </NavLink>\r\n        </li>\r\n      </Nav>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Navbar\r\n      collapseOnSelect\r\n      fixed=\"top\"\r\n      expand=\"lg\"\r\n      bg=\"dark\"\r\n      variant=\"dark\"\r\n      style={{ zIndex: 1 }}\r\n    >\r\n      <Container fluid>\r\n        {/* <Navbar.Brand href=\"#home\">Admin Dashboard</Navbar.Brand> */}\r\n        <Link to=\"/\" className=\"navbar-brand\">\r\n          Admin Dashboard\r\n        </Link>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            {/* <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\r\n                            <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                            <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                            <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                            <NavDropdown.Divider />\r\n                            <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                            </NavDropdown> */}\r\n          </Nav>\r\n          {auth.authenticate ? renderLoggedInLinks() : renderNonLoggedInLinks()}\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Header;","C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\store\\index.js",[],"C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\reducers\\index.js",[],"C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\reducers\\auth.reducers.js",["201","202"],"import { authConstants } from \"../actions/constants\"\r\n\r\nconst initState={\r\n    token:null,\r\n    user:{\r\n        firstName:'',\r\n        lastName:'',\r\n        email:'',\r\n        picture:''\r\n    },\r\n    authenticate:false,\r\n    authenticating:false,\r\n    loading:false,\r\n    error:null,\r\n    message:''\r\n}\r\nexport default (state= initState, action)=>{\r\n\r\n  \r\n\r\n    switch(action.type){\r\n\r\n        case authConstants.LOGIN_REQUEST:\r\n            state={\r\n                ...state,\r\n                authenticating:true\r\n            }\r\n            break;\r\n        case authConstants.LOGIN_SUCCESS:\r\n            state={\r\n                ...state,\r\n                user:action.payload.user,\r\n                token:action.payload.token,\r\n                authenticate:true,\r\n                authenticating:false\r\n            }\r\n            break;\r\n        case authConstants.LOGIN_FAILURE:\r\n                state={\r\n                    ...state,\r\n                    error:action.payload.error,\r\n                    authenticate:false\r\n                }\r\n                break;\r\n        case authConstants.LOGOUT_REQUEST:\r\n                state= {\r\n                    ...state,\r\n                    loading:true\r\n                }\r\n                break;\r\n        case authConstants.LOGOUT_SUCCESS:\r\n                state= {\r\n                    ...initState\r\n                }\r\n                break;\r\n        case authConstants.LOGOUT_FAILURE:\r\n                state= {\r\n                    ...state,\r\n                    error: action.payload.error,\r\n                    loading:false\r\n                }\r\n                break;\r\n\r\n    }\r\n    return state;\r\n}","C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\reducers\\user.reducer.js",["203","204"],"import { userConstants } from \"../actions/constants\"\r\n\r\nconst initState={\r\n    error:null,\r\n    message:'',\r\n    loading:false\r\n}\r\nexport default (state= initState, action)=>{\r\n    switch(action.type){\r\n        case userConstants.USER_REGISTER_REQUEST:\r\n            state={\r\n                ...state,\r\n                loading:true\r\n            }\r\n            break;\r\n        case userConstants.USER_REGISTER_SUCCESS:\r\n            state={\r\n                ...state,\r\n                loading:false,\r\n                message:action.payload.message\r\n            }\r\n            break;\r\n        case userConstants.USER_REGISTER_FAILURE:\r\n            state={\r\n                ...state,\r\n                loading:false,\r\n                error:action.payload.error\r\n            }\r\n            break;\r\n    }\r\n    return state;\r\n}","C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\reducers\\product.reducer.js",["205","206"],"import { productConstants } from \"../actions/constants\";\r\nconst initialState={\r\n    products:[]\r\n}\r\n\r\nexport default (state= initialState,action)=>{\r\n    switch(action.type){\r\n        case productConstants.GET_ALL_PRODUCTS_SUCCESS:\r\n            state={\r\n                ...state,\r\n                products:action.payload.products\r\n            }\r\n            break;\r\n        \r\n    }\r\n    return state;\r\n}","C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\reducers\\category.reducer.js",["207","208","209","210"],"import { categoryConstants } from \"../actions/constants\";\r\n\r\nconst initState= {\r\n    categories:[],\r\n    loading:false,\r\n    error:null\r\n};\r\nconst buildNewCategories= (parentId,categories, category)=>{\r\n    const myCategories= [];\r\n    if(parentId == undefined){\r\n        return [\r\n            ...categories,\r\n            {\r\n            _id:category._id,\r\n            name:category.name,\r\n            slug:category.slug,\r\n            type:category.type,\r\n            children:[]\r\n            }\r\n            \r\n        ]\r\n    }\r\n    for(let cat of categories){\r\n    if(cat._id == parentId){\r\n        const newCategory ={\r\n            _id:category._id,\r\n            name:category.name,\r\n            slug:category.slug,\r\n            parentId:category.parentId,\r\n            type:category.type,\r\n            children:[]\r\n        }\r\n        myCategories.push({\r\n            ...cat,\r\n            children:cat.children.length > 0 ? [...cat.children, newCategory] : [newCategory]\r\n        })\r\n    }\r\n    else{\r\n        myCategories.push({\r\n            ...cat,\r\n            children:cat.children ? buildNewCategories(parentId,cat.children,category): []\r\n        })\r\n    }\r\n    \r\n\r\n    }\r\n    return myCategories;\r\n}\r\nexport default (state= initState, action)=>{\r\n    switch(action.type){\r\n        case categoryConstants.GET_ALL_CATEGORIES_SUCCESS:\r\n            state={\r\n                ...state,\r\n                categories:action.payload.categories\r\n            }\r\n            break;\r\n        case categoryConstants.ADD_NEW_CATEGORY_REQUEST:\r\n            state={\r\n                ...state,\r\n                loading:true\r\n            }\r\n            break;  \r\n        case categoryConstants.ADD_NEW_CATEGORY_SUCCESS:\r\n            const category= action.payload.category;\r\n            const updatedCategories=buildNewCategories(category.parentId, state.categories,category);\r\n            console.log(updatedCategories);\r\n            state={\r\n                ...state,\r\n                categories:updatedCategories,\r\n                loading:false\r\n            }\r\n            break;\r\n        case categoryConstants.ADD_NEW_CATEGORY_FAILURE:\r\n            state={\r\n                ...initState,\r\n                loading:false\r\n                \r\n            }\r\n            break;   \r\n        case categoryConstants.UPDATE_CATEGORIES_REQUEST:\r\n            state={\r\n                ...state,\r\n                loading:true\r\n            }\r\n            break;\r\n        case categoryConstants.UPDATE_CATEGORIES_SUCCESS:\r\n            state={\r\n                ...state,\r\n                loading:false\r\n            }\r\n            break; \r\n        case categoryConstants.UPDATE_CATEGORIES_FAILURE:\r\n            state={\r\n                ...state,\r\n                error:action.payload.error,\r\n                loading: false\r\n            }\r\n            break; \r\n        case categoryConstants.DELETE_CATEGORIES_REQUEST:\r\n            state={\r\n                ...state,\r\n                loading:true\r\n            }\r\n            break;\r\n        case categoryConstants.DELETE_CATEGORIES_SUCCESS:\r\n            state={\r\n                ...state,\r\n                loading:false\r\n            }\r\n            break; \r\n        case categoryConstants.DELETE_CATEGORIES_FAILURE:\r\n            state={\r\n                ...state,\r\n                error:action.payload.error,\r\n                loading: false\r\n            }\r\n            break; \r\n\r\n    \r\n    }\r\n    return state\r\n}","C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\reducers\\order.reducer.js",["211","212"],"import { orderConstants } from \"../actions/constants\";\r\n\r\nconst initState = {\r\n  orders: [],\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n  switch (action.type) {\r\n    case orderConstants.GET_CUSTOMER_ORDER_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        orders: action.payload.orders,\r\n      };\r\n      break;\r\n  }\r\n\r\n  return state;\r\n};","C:\\react_web\\mern-ecommerce2\\flip-kart-admin\\src\\reducers\\page.reducer.js",["213","214"],"import { pageConstants } from \"../actions/constants\"\r\n\r\nconst initState = {\r\n    error: null,\r\n    loading:false,\r\n    page:{}\r\n}\r\nexport default (state= initState, action)=>{\r\n    switch(action.type){\r\n        case pageConstants.CREATE_PAGE_REQUEST:\r\n        state = {\r\n            ...state,\r\n            loading:true\r\n        }\r\n        break;\r\n        case pageConstants.CREATE_PAGE_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                loading:false\r\n            }\r\n        break;\r\n        case pageConstants.CREATE_PAGE_FAILURE:\r\n            state = {\r\n                ...state,\r\n                loading:false,\r\n                error:action.payload.error\r\n            }\r\n        break;\r\n    }\r\n    return state;\r\n}",{"ruleId":"215","severity":1,"message":"216","line":12,"column":25,"nodeType":"217","messageId":"218","endLine":12,"endColumn":39},{"ruleId":"219","severity":1,"message":"220","line":31,"column":6,"nodeType":"221","endLine":31,"endColumn":25,"suggestions":"222"},{"ruleId":"223","replacedBy":"224"},{"ruleId":"225","replacedBy":"226"},{"ruleId":"215","severity":1,"message":"227","line":3,"column":21,"nodeType":"217","messageId":"218","endLine":3,"endColumn":24},{"ruleId":"215","severity":1,"message":"228","line":3,"column":26,"nodeType":"217","messageId":"218","endLine":3,"endColumn":29},{"ruleId":"215","severity":1,"message":"229","line":3,"column":31,"nodeType":"217","messageId":"218","endLine":3,"endColumn":40},{"ruleId":"215","severity":1,"message":"230","line":5,"column":10,"nodeType":"217","messageId":"218","endLine":5,"endColumn":17},{"ruleId":"215","severity":1,"message":"231","line":8,"column":10,"nodeType":"217","messageId":"218","endLine":8,"endColumn":27},{"ruleId":"232","severity":1,"message":"233","line":222,"column":19,"nodeType":"234","endLine":222,"endColumn":44},{"ruleId":"215","severity":1,"message":"235","line":1,"column":25,"nodeType":"217","messageId":"218","endLine":1,"endColumn":34},{"ruleId":"215","severity":1,"message":"236","line":18,"column":10,"nodeType":"217","messageId":"218","endLine":18,"endColumn":15},{"ruleId":"215","severity":1,"message":"237","line":18,"column":17,"nodeType":"217","messageId":"218","endLine":18,"endColumn":25},{"ruleId":"215","severity":1,"message":"238","line":3,"column":31,"nodeType":"217","messageId":"218","endLine":3,"endColumn":37},{"ruleId":"215","severity":1,"message":"239","line":7,"column":8,"nodeType":"217","messageId":"218","endLine":7,"endColumn":13},{"ruleId":"240","severity":1,"message":"241","line":61,"column":12,"nodeType":"242","messageId":"243","endLine":61,"endColumn":14},{"ruleId":"240","severity":1,"message":"241","line":62,"column":70,"nodeType":"242","messageId":"243","endLine":62,"endColumn":72},{"ruleId":"240","severity":1,"message":"241","line":64,"column":18,"nodeType":"242","messageId":"243","endLine":64,"endColumn":20},{"ruleId":"240","severity":1,"message":"241","line":65,"column":72,"nodeType":"242","messageId":"243","endLine":65,"endColumn":74},{"ruleId":"240","severity":1,"message":"241","line":147,"column":72,"nodeType":"242","messageId":"243","endLine":147,"endColumn":74},{"ruleId":"240","severity":1,"message":"241","line":151,"column":72,"nodeType":"242","messageId":"243","endLine":151,"endColumn":74},{"ruleId":"215","severity":1,"message":"244","line":172,"column":9,"nodeType":"217","messageId":"218","endLine":172,"endColumn":17},{"ruleId":"215","severity":1,"message":"236","line":20,"column":10,"nodeType":"217","messageId":"218","endLine":20,"endColumn":15},{"ruleId":"215","severity":1,"message":"237","line":20,"column":17,"nodeType":"217","messageId":"218","endLine":20,"endColumn":25},{"ruleId":"240","severity":1,"message":"241","line":49,"column":69,"nodeType":"242","messageId":"243","endLine":49,"endColumn":71},{"ruleId":"215","severity":1,"message":"245","line":2,"column":10,"nodeType":"217","messageId":"218","endLine":2,"endColumn":23},{"ruleId":"240","severity":1,"message":"241","line":79,"column":23,"nodeType":"242","messageId":"243","endLine":79,"endColumn":25},{"ruleId":"215","severity":1,"message":"246","line":2,"column":3,"nodeType":"217","messageId":"218","endLine":2,"endColumn":23},{"ruleId":"215","severity":1,"message":"247","line":2,"column":23,"nodeType":"217","messageId":"218","endLine":2,"endColumn":34},{"ruleId":"248","severity":1,"message":"249","line":17,"column":1,"nodeType":"250","endLine":66,"endColumn":2},{"ruleId":"251","severity":1,"message":"252","line":21,"column":5,"nodeType":"253","messageId":"254","endLine":64,"endColumn":6},{"ruleId":"248","severity":1,"message":"249","line":8,"column":1,"nodeType":"250","endLine":32,"endColumn":2},{"ruleId":"251","severity":1,"message":"252","line":9,"column":5,"nodeType":"253","messageId":"254","endLine":30,"endColumn":6},{"ruleId":"248","severity":1,"message":"249","line":6,"column":1,"nodeType":"250","endLine":17,"endColumn":2},{"ruleId":"251","severity":1,"message":"252","line":7,"column":5,"nodeType":"253","messageId":"254","endLine":15,"endColumn":6},{"ruleId":"240","severity":1,"message":"241","line":10,"column":17,"nodeType":"242","messageId":"243","endLine":10,"endColumn":19},{"ruleId":"240","severity":1,"message":"241","line":24,"column":16,"nodeType":"242","messageId":"243","endLine":24,"endColumn":18},{"ruleId":"248","severity":1,"message":"249","line":49,"column":1,"nodeType":"250","endLine":122,"endColumn":2},{"ruleId":"251","severity":1,"message":"252","line":50,"column":5,"nodeType":"253","messageId":"254","endLine":120,"endColumn":6},{"ruleId":"248","severity":1,"message":"249","line":7,"column":1,"nodeType":"250","endLine":18,"endColumn":3},{"ruleId":"251","severity":1,"message":"252","line":8,"column":3,"nodeType":"253","messageId":"254","endLine":15,"endColumn":4},{"ruleId":"248","severity":1,"message":"249","line":8,"column":1,"nodeType":"250","endLine":31,"endColumn":2},{"ruleId":"251","severity":1,"message":"252","line":9,"column":5,"nodeType":"253","messageId":"254","endLine":29,"endColumn":6},"no-unused-vars","'getAllCategory' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["255"],"no-native-reassign",["256"],"no-negated-in-lhs",["257"],"'Row' is defined but never used.","'Col' is defined but never used.","'Container' is defined but never used.","'NavLink' is defined but never used.","'generatePublicUrl' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'Button' is defined but never used.","'Input' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'idsArray' is assigned a value but never used.","'authConstants' is defined but never used.","'initialDataConstants' is defined but never used.","'NavDropdown' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","default-case","Expected a default case.","SwitchStatement","missingDefaultCase",{"desc":"258","fix":"259"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [auth.authenticate, dispatch]",{"range":"260","text":"261"},[904,923],"[auth.authenticate, dispatch]"]